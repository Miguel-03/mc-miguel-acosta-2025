# -*- coding: utf-8 -*-
"""TALLER24

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IaEIz2WBdOmILOccMjLkD4vzvcMWn-lp
"""

import numpy as np

def lagrange_interpolacion(x_vals, y_vals):
    def L(k, x):
        terms = [(x - x_vals[j]) / (x_vals[k] - x_vals[j]) for j in range(len(x_vals)) if j != k]
        return np.prod(terms, axis=0)

    def P(x):
        return sum(y_vals[k] * L(k, x) for k in range(len(x_vals)))

    return P

# Datos del problema
x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 0.5, -2, -3.5, 0.5])

# Crear el polinomio
polinomio = lagrange_interpolacion(x, y)

# Evaluar el polinomio en varios puntos
print("Evaluaci√≥n del polinomio de Lagrange en puntos intermedios:")
for xi in [1, 2, 2.5, 3, 4, 5]:
    print(f"P({xi}) = {polinomio(xi)}")