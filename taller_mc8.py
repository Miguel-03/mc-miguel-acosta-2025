# -*- coding: utf-8 -*-
"""TALLER MC8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-MTRFeMvDPVvpwqPxbICwftvrmVXfyJg
"""

def convertir_base10_a_base16(numero):
    if numero == 0:
        return "0"

    digitos_hex = "0123456789ABCDEF"
    resultado = ""

    while numero > 0:
        residuo = numero % 16
        resultado = digitos_hex[residuo] + resultado
        numero = numero // 16

    return resultado


numero_base10 = int(input("Introduce un número en base 10: "))
numero_base16 = convertir_base10_a_base16(numero_base10)
print(f"El número {numero_base10} en base 10 es {numero_base16} en base 16.")

def convertir_base8_a_base10(numero_base8):

    for digito in str(numero_base8):
        if digito not in '01234567':
            return "Error: El número no es válido en base 8."

    numero_base8 = str(numero_base8)
    longitud = len(numero_base8)
    resultado = 0


    for i, digito in enumerate(numero_base8):
        resultado += int(digito) * (8 ** (longitud - i - 1))

    return resultado


numero_base8 = input("Introduce un número en base 8: ")
try:
    numero_base8 = int(numero_base8)
    numero_base10 = convertir_base8_a_base10(numero_base8)
    if isinstance(numero_base10, int):
        print(f"El número {numero_base8} en base 8 es {numero_base10} en base 10.")
    else:
        print(numero_base10)
except ValueError:
    print("Error: Debes ingresar un número entero.")